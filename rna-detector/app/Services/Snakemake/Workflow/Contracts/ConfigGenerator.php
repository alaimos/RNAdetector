<?php

namespace App\Services\Snakemake\Workflow\Contracts;

use App\Services\Metadata\Container as MetadataContainer;
use App\Services\Snakemake\Workflow\Data\CollectedDataFiles;
use App\Services\Snakemake\Workflow\WorkflowDatasets;
use Illuminate\Config\Repository as ConfigRepository;

/**
 * Interface ConfigGenerator
 *
 * A ConfigGenerator is responsible for generating a configuration file for a Snakemake workflow.
 * The configuration file is used to define the parameters, metadata, datasets, and data files for the workflow.
 */
interface ConfigGenerator
{
    /**
     * Get the name of the config generator.
     */
    public static function name(): string;

    /**
     * Convert an array to a Config Generator instance.
     *
     * @param  array<string, mixed>  $data
     */
    public static function from(array $data): static;

    /**
     * Get the name of the file generated by this config generator.
     * The name should also include the path relative to the workflow directory.
     */
    public function file(): string;

    /**
     * Set the data files for the workflow.
     */
    public function withDataFiles(CollectedDataFiles $dataFiles): self;

    /**
     * Set the datasets for the workflow.
     */
    public function withDatasets(WorkflowDatasets $datasets): self;

    /**
     * Set the metadata for the workflow.
     */
    public function withMetadata(MetadataContainer $metadata): self;

    /**
     * Set the parameters for the workflow.
     */
    public function withParams(ConfigRepository $params): self;

    /**
     * Write the configuration to a file in the given directory.
     */
    public function write(string $workflowDir): void;
}
