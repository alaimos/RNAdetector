import { Path } from "@/plugins/_base/plugin-types/custom";
import { CustomWizardStep } from "@/plugins/_base/plugin-types/custom-gui";
import { CustomParameterType } from "@/plugins/_base/plugin-types/custom-parameters";
import { LucideIcon } from "lucide-react";
import { Analysis as DbAnalysis, Dataset } from "@prisma/client";

/**
 * The output specification for an analysis.
 * An analysis can have multiple outputs, each with its own specification.
 */
export interface OutputSpecification<Parameters extends Record<string, any>> {
  /**
   * The name of the output. It will be displayed in the UI.
   */
  name: string;
  /**
   * The default name of the file relative to the workflow directory.
   * If not provided, the generate function must be provided.
   */
  filename?: string;
  /**
   * The icon displayed next to the output.
   */
  icon?: LucideIcon;
  /**
   * A function that generates the output file in the workflow directory.
   * If not provided, the filename must be provided.
   * The function should return a promise that resolves with the relative path to the generated file.
   * The function will receive four arguments: the parameter object, the output dataset object,
   * a function to report progress, and the analysis object.
   * This function might modify the output dataset by adding the generated file as a
   * data record that points to the generated file. It might also modify the metadata of the output dataset.
   * @param parameters The parameter object.
   * @param outputDataset The output dataset object.
   * @param analysis The analysis object.
   * @param progressFn A function to report progress.
   * @returns A promise that resolves with the relative path to the generated file.
   */
  generate?: (
    parameters: Parameters,
    outputDataset: Dataset,
    analysis: DbAnalysis,
    progressFn: (data: string) => void,
  ) => Promise<string>;
}

/**
 * An analysis is a workflow that generates outputs based on input parameters and data.
 */
export interface Analysis<Parameters extends Record<string, any>> {
  /**
   * The name of the analysis. It will be displayed in the UI.
   */
  name: string;
  /**
   * An icon representing the analysis. It will be displayed in the UI.
   */
  icon?: LucideIcon;
  /**
   * The specifications of the parameters required by the analysis.
   * See the CustomParameterType for more details.
   */
  parameters: Record<Path<Parameters>, CustomParameterType<Parameters>>;
  /**
   * The wizard steps used to collect the parameters.
   * If not provided, all parameters will be displayed in a single form.
   * See the CustomWizardStep interface for more details.
   */
  wizardSteps?: CustomWizardStep<Parameters>[];
  /**
   * The workflow that performs this analysis.
   */
  workflow: string;
  /**
   * The output specifications for the analysis.
   * See the OutputSpecification interface for more details.
   * Multiple outputs can be generated by the analysis and stored in the output dataset.
   * The output dataset will be created automatically if it does not exist.
   */
  output: OutputSpecification<Parameters>[];
  /**
   * A function that returns the output dataset name
   */
  outputDatasetName: (analysis: DbAnalysis, parameters: Parameters) => string;
}
